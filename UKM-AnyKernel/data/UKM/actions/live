UKM=/data/UKM;
BB=$UKM/busybox;
DEVICE=`sh $UKM/device/.device.sh`;

case $1 in
	SCALINGFREQ)
		FREQMAX_0="$(expr `cat /sys/kernel/msm_limiter/live_max_freq_0` / 1000)MHz"
		FREQMIN_0="$(expr `cat /sys/kernel/msm_limiter/live_min_freq_0` / 1000)MHz"
		FREQMAX_1="$(expr `cat /sys/kernel/msm_limiter/live_max_freq_1` / 1000)MHz"
		FREQMIN_1="$(expr `cat /sys/kernel/msm_limiter/live_min_freq_1` / 1000)MHz"
		FREQMAX_2="$(expr `cat /sys/kernel/msm_limiter/live_max_freq_2` / 1000)MHz"
		FREQMIN_2="$(expr `cat /sys/kernel/msm_limiter/live_min_freq_2` / 1000)MHz"
		FREQMAX_3="$(expr `cat /sys/kernel/msm_limiter/live_max_freq_3` / 1000)MHz"
		FREQMIN_3="$(expr `cat /sys/kernel/msm_limiter/live_min_freq_3` / 1000)MHz"
		echo CPU0 - $FREQMAX_0 : $FREQMIN_0@nCPU1 - $FREQMAX_1 : $FREQMIN_1@nCPU2 - $FREQMAX_2 : $FREQMIN_2@nCPU3 - $FREQMAX_3 : $FREQMIN_3
	;;
	KSMStats)
		KSM="$(expr `cat /sys/kernel/mm/ksm/run`)"
		if [ KSM -eq "1" ]; then
			SAVEDMEM=`echo "Saved memory: $((\`cat /sys/kernel/mm/ksm/pages_sharing\`*4096/1024/1024)) MB"`
			SHARDMEM=`echo "Shared memory: $((\`cat /sys/kernel/mm/ksm/pages_shared\`*4096/1024/1024)) MB"`
			echo $SAVEDMEM@n$SHARDMEM
		else
			echo KSM is Disabled.
		fi
	;;
	PVSbin)
		if [ -e /sys/module/clock_krait_8974/parameters/table_name ]; then
			PVS="$(expr `cat /sys/module/clock_krait_8974/parameters/table_name`)"
			echo $PVS
		elif [ -e /sys/module/acpuclock_krait/parameters/pvs_number ]; then
			PVS="$(expr `cat /sys/module/acpuclock_krait/parameters/pvs_number`)"
			echo $PVS
		else
			echo PVS bin not found.
		fi
	;;
	CORESTATUS)
		CORE_0="$(expr `cat /sys/kernel/msm_limiter/live_cur_freq_0` / 1000)MHz"
		CORE_1="$(expr `cat /sys/kernel/msm_limiter/live_cur_freq_1` / 1000)MHz"
		CORE_2="$(expr `cat /sys/kernel/msm_limiter/live_cur_freq_2` / 1000)MHz"
		CORE_3="$(expr `cat /sys/kernel/msm_limiter/live_cur_freq_3` / 1000)MHz"
		if [ $CORE_1 == "0MHz" ]; then
			CORE_1=Offline
		fi
		if [ $CORE_2 == "0MHz" ]; then
			CORE_2=Offline
		fi
		if [ $CORE_3 == "0MHz" ]; then
			CORE_3=Offline
		fi
		echo CPU0: $CORE_0@nCPU1: $CORE_1@nCPU2: $CORE_2@nCPU3: $CORE_3
	;;
	BatteryTemperature)
		$BB echo `sh $DEVICE LiveBatteryTemperature`;
	;;
	Bootloader)
		$BB echo `sh $DEVICE LiveBootloader`;
	;;
	CPUBWFrequency)
		$BB echo `sh $DEVICE LiveCPUBWFrequency`;
	;;
	CPUFrequency)
		$BB echo `sh $DEVICE LiveCPUFrequency`;
	;;
	CPUTemperature)
		$BB echo `sh $DEVICE LiveCPUTemperature`;
	;;
	GPUFrequency)
		$BB echo `sh $DEVICE LiveGPUFrequency`;
	;;
	InstallationCheck)
		$BB echo `if [ ! -f "/system/etc/init.d/UKM" ]; then $BB echo "UKM file missing in init.d"; elif [ ! -f "/system/addon.d/UKM.sh" ]; then $BB echo "UKM.sh file missing in addon.d"; else $BB echo "All checks OK"; fi`;
	;;
	Memory)
		$BB echo `sh $DEVICE LiveMemory`;
	;;
	Time)
		$BB echo `sh $DEVICE LiveTime $2 $3`;
	;;
	TimeGpu)
		$BB echo `sh $DEVICE LiveTimeGpu $2 $3`;
	;;
	UpTime)
		$BB echo `sh $DEVICE LiveUpTime`;
	;;
	UnUsed)
		$BB echo `sh $DEVICE LiveUnUsed`;
	;;
	UnUsedGpu)
		$BB echo `sh $DEVICE LiveUnUsedGpu`;
	;;
	WakelocksKernel)
		$BB echo `sh $DEVICE LiveWakelocksKernel`;
	;;
	CpuPvsLevel)
		$BB echo `sh $DEVICE LiveCpuPvsLevel`;
	;;
	ChargeCurrent)
		$BB echo `sh $DEVICE LiveChargeCurrent`;
	;;
	KernelCurrent)
		$BB echo `sh $DEVICE LiveKernelCurrent`;
	;;
	InfoCurrent)
		$BB echo `sh $DEVICE LiveInfoCurrent`;
	;;
	BrickedHotplug)
		$BB echo `sh $DEVICE LiveBrickedHotplug`;
	;;
	IntellidHotplug)
		$BB echo `sh $DEVICE LiveIntellidHotplug`;
	;;
	MsmHotplug)
		$BB echo `sh $DEVICE LivedMsmHotplug`;
	;;
	CPUFrequencyList)
		$BB echo `sh $DEVICE LiveCPUFrequencyList`;
	;;
	CPUGovernorList)
		$BB echo `sh $DEVICE LiveCPUGovernorList`;
	;;
	DefaultCPU0Governor)
		$BB echo `sh $DEVICE LiveDefaultCPU0Governor`;
	;;
	DefaultCPU1Governor)
		$BB echo `sh $DEVICE LiveDefaultCPU1Governor`;
	;;
	DefaultCPU2Governor)
		$BB echo `sh $DEVICE LiveDefaultCPU2Governor`;
	;;
	DefaultCPU3Governor)
		$BB echo `sh $DEVICE LiveDefaultCPU3Governor`;
	;;
	IntIOReadAheadSize)
		$BB echo `sh $DEVICE LiveIntIOReadAheadSize`;
	;;
	ExtIOReadAheadSize)
		$BB echo `sh $DEVICE LiveExtIOReadAheadSize`;
	;;
	IntIOScheduler)
		$BB echo `sh $DEVICE LiveIntIOScheduler`;
	;;
	ExtIOScheduler)
		$BB echo `sh $DEVICE LiveExtIOScheduler`;
	;;
	TCPCongestion)
		$BB echo `sh $DEVICE LiveTCPCongestion`;
	;;
	CPU0_MAX_MIN_Freq)
		$BB echo `sh $DEVICE LiveCPU0_MAX_MIN_Freq`;
	;;
	CPU1_MAX_MIN_Freq)
		$BB echo `sh $DEVICE LiveCPU1_MAX_MIN_Freq`;
	;;
	CPU2_MAX_MIN_Freq)
		$BB echo `sh $DEVICE LiveCPU2_MAX_MIN_Freq`;
	;;
	CPU3_MAX_MIN_Freq)
		$BB echo `sh $DEVICE LiveCPU3_MAX_MIN_Freq`;
	;;
	CPU_HOTPLUG)
		$BB echo `sh $DEVICE LiveCPU_HOTPLUG`;
	;;
	CPU_CORES_ON_OFF)
		$BB echo `sh $DEVICE LiveCPU_CORES_ON_OFF`;
	;;
	CURFreq)
		$BB echo `sh $DEVICE LiveCURFreq`;
	;;
	BatteryTemperature)
		$BB echo `sh $DEVICE LiveBatteryTemperature`;
	;;
	CPUFrequency)
		$BB echo `sh $DEVICE LiveCPUFrequency`;
	;;
	CPUTemperature)
		$BB echo `sh $DEVICE LiveCPUTemperature`;
	;;
	Memory)
		$BB echo `sh $DEVICE LiveMemory`;
	;;
	ZRAMStats)
		ZRAM="$(expr `cat /sys/devices/virtual/block/zram0/initstate`)"
		if [ $ZRAM -eq "1" ]; then
			compr_data_size_tmp=`echo "$((\`cat /sys/block/zram0/compr_data_size\`/1024))"`
			mem_used_total_tmp=`echo "$((\`cat /sys/block/zram0/mem_used_total\`/1024))"`
			orig_data_size_tmp=`echo "$((\`cat /sys/block/zram0/orig_data_size\`/1024))"`
			zero_pages_tmp=`echo "$((\`cat /sys/block/zram0/zero_pages\`*4))"`
			disksize_tmp=`echo "$((\`cat /sys/block/zram0/disksize\`/1024))"`
			SwapCached_tmp=`echo "\`cat /proc/meminfo | grep SwapCached | cut -d " " -f9\`"`

			notify_free=`echo "Notify free: \`cat /sys/block/zram0/notify_free\`"`
			num_reads=`echo "Num reads: \`cat /sys/block/zram0/num_reads\`"`
			num_writes=`echo "Num writes: \`cat /sys/block/zram0/num_writes\`"`

			saved_tmp=`echo "$((\`echo orig_data_size_tmp\`+\`echo zero_pages_tmp\`-\`echo mem_used_total_tmp\`-\`echo SwapCached_tmp\`))"`
			saved=`echo "Memory saved: $((\`echo saved_tmp\`/1024))MB"`
			Compression=`echo "Compression: $((\`echo compr_data_size_tmp\`*100/\`echo orig_data_size_tmp\`))%"`
			Compression_with_overhead=`echo "Compression with overhead: $((\`echo mem_used_total_tmp\`*100/\`echo orig_data_size_tmp\`))%"`
			Used_stage1=`echo "$((\`echo orig_data_size_tmp\`+\`echo zero_pages_tmp\`))"`
			Used_stage2=`echo "$((\`echo Used_stage1\`*100))"`
			Used=`echo Used ZRAM "$((\`echo Used_stage2\`/\`echo disksize_tmp\`))%"`

			compr_data_size=`echo Compression data size: "$((\`cat /sys/block/zram0/compr_data_size\`/1024/1024))MB"`
			mem_used_total=`echo Mem used total: "$((\`cat /sys/block/zram0/mem_used_total\`/1024/1024))MB"`
			orig_data_size=`echo Original data size: "$((\`cat /sys/block/zram0/orig_data_size\`/1024/1024))MB"`
			zero_pages=`echo Zero pages: "$((\`cat /sys/block/zram0/zero_pages\`*4))KiB"`
			disksize=`echo Zram Disksize: "$((\`cat /sys/block/zram0/disksize\`/1024/1024))MB"`
			SwapCached=`echo SwapCached: "$((\`echo SwapCached_tmp\`/1024))MB"`

			echo $compr_data_size@n$mem_used_total@n$orig_data_size@n$zero_pages@n$disksize@n@n$notify_free@n$num_reads@n$num_writes@n@n$SwapCached@n$saved@n$Compression@n$Compression_with_overhead@n$Used

		else
			echo ZRAM is Disabled.
		fi
	;;
	UKSMStats)
		UKSM="$(expr `cat /sys/kernel/mm/uksm/run`)"
		if [ $UKSM -eq "1" ]; then
			SAVEDMEM=`echo "Saved memory: $((\`cat /sys/kernel/mm/uksm/pages_sharing\`*4096/1024/1024)) MB"`
			SHARDMEM=`echo "Shared memory: $((\`cat /sys/kernel/mm/uksm/pages_shared\`*4096/1024/1024)) MB"`
			CANTBESHAREDMEM=`echo "Cannot be shared memory: $((\`cat /sys/kernel/mm/uksm/pages_unshared\`*4096/1024/1024)) MB"`
			MAXCPU=`echo "UKSM Max Allowed CPU Usage: \`cat /sys/kernel/mm/uksm/max_cpu_percentage\`%"`
			SLEEPMS=`echo "UKSM Sleep Millisecs: \`cat /sys/kernel/mm/uksm/sleep_millisecs\`"`
			echo $SAVEDMEM@n$SHARDMEM@n$CANTBESHAREDMEM@n$MAXCPU@n$SLEEPMS
		else
			echo UKSM is Disabled.
		fi
	;;
	Time)
		$BB echo `sh $DEVICE LiveTime $2 $3`;
	;;
	UpTime)
		$BB echo `sh $DEVICE LiveUpTime`;
	;;
	UnUsed)
		$BB echo `sh $DEVICE LiveUnUsed`;
	;;
esac;
